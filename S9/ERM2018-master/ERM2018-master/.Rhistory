mapa2= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "dodgerblue2", breaks=seq(from=0, to=100, by=20)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "bottom") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "% de votos válidos por Podemos") +
theme(
plot.title = element_text(color="black", size=10, face="bold"))
### Mapa del ganador
mapaleyendaL= ggplot(mapDIS2)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS2,
aes(fill=GANADOR),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_manual(values=c("firebrick","dodgerblue2")) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "bottom") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Victoria a nivel distrital") +
theme(
plot.title = element_text(color="black", size=11, face="bold"))
plot_grid(mapa,mapa2,mapa1, ncol = 3)
ap = data[,c(1,15,29)]
ap_summary = as.data.frame(apply(ap[-1],2,summary))
ap_summary%>%
kbl() %>%
kable_minimal()
ap_resh = melt(ap, id=c("DISTRITO"))
ggplot(data= ap_resh, aes(x=value, group=variable, fill=variable)) +
geom_density(adjust=1.5, alpha=.4, color = "gray", linetype = "dashed") +
scale_fill_manual(values=c("firebrick","dodgerblue2"), name = "") + theme_void() +
theme(legend.position="bottom")
View(data)
names(data)
inputData = data[,c(1,5:10)]
names(inputd)
names(inputData)
row.names(inputData) = inputData$DISTRITO
inputData = inputData[,-c(1)]
View(inputData)
set.seed(2019)
g.dist = daisy(inputData, metric="gower")
library(cluster)
set.seed(2019)
g.dist = daisy(inputData, metric="gower")
fviz_nbclust(inputData, pam,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F) #Recomendación de num para PAM
library(factoextra)
fviz_nbclust(inputData, pam,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F) #Recomendación de num para PAM
names(data)
fviz_nbclust(inputData, hcut,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F)
View(inputData)
str(inputData)
data$tDISC = data$DISC_2020/data$POB_2020
data$tMAS80 = data$MAS80_2020/data$POB_2020
names(data)
inputData = data[,c(1,7:10,38,39)]
View(inputData)
row.names(inputData) = inputData$DISTRITO
inputData = inputData[,-c(1)]
library(cluster)
set.seed(2019)
g.dist = daisy(inputData, metric="gower")
fviz_nbclust(inputData, pam,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F) #Recomendación de num para PAM
fviz_nbclust(inputData, hcut,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F)
res.pam = pam(g.dist,3,cluster.only = F)
res.agnes = hcut(g.dist, k = 3,hc_func='agnes',hc_method = "ward.D")
res.diana = hcut(g.dist, k = 3,hc_func='diana')
#Evaluación gráfica
fviz_silhouette(res.pam) #PAM
fviz_silhouette(res.agnes) #AGNES
#Evaluación gráfica
fviz_silhouette(res.pam) #PAM
fviz_silhouette(res.diana)
inputData$clust = factor(res.agnes$cluster)
View(inputData)
table(inputData$clust)
#Lo pasamos a la data original:
inputData$DISTRITO = row.names(inputData)
row.names(inputData) = NULL
names(inputData)
inputData = inputData[,c(7,8)]
View(data)
data = merge(data, inputData, by = "DISTRITO")
View(data)
library(dplyr)
summ_clust = data %>%
group_by(clust) %>%
summarise(IDH = mean(IDH_2019, na.rm=T))
View(summ_clust)
names(data)
summ_clust = data %>%
group_by(clust) %>%
summarise(IDH = mean(IDH_2019, na.rm=T),
IVA = mean(IVA, na.rm = T),
POBREZA = mean(POBREZA_2019, na.rm = T),
EXT_POBREZA = mean(EXT_POBREZA_2019, na.rm =T),
DISCAPACIDAD = mean(tDISC, na.rm = T),
MAS80 = mean(tMAS80, na.rm = T))
summ_clust%>%
kbl() %>%
kable_minimal()
data$clust = factor(data$clust, levels = c(1:3), labels = c("Vulnerabilidad alta","Vulnerabilidad baja","Vulnerabilidad media"))
summ_clust = data %>%
group_by(clust) %>%
summarise(IDH = mean(IDH_2019, na.rm=T),
IVA = mean(IVA, na.rm = T),
POBREZA = mean(POBREZA_2019, na.rm = T),
EXT_POBREZA = mean(EXT_POBREZA_2019, na.rm =T),
DISCAPACIDAD = mean(tDISC, na.rm = T),
MAS80 = mean(tMAS80, na.rm = T))
summ_clust%>%
kbl() %>%
kable_minimal()
#Juntamos información con el shape:
mapDIS3=merge(mapDIS,data,by.x='IDDIST',by.y='UBIGEO', all.x = T) #siempre primero el shape
str(data$clust)
mapaleyendaL= ggplot(mapDIS3)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS2,
aes(fill=GANADOR),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_manual(values=c("firebrick","mediumseagreen","lightgoldenrod1")) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "bottom") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Distritos según conglomerado de vulnerabilidad") +
theme(
plot.title = element_text(color="black", size=11, face="bold"))
mapa1
mapaleyendaL= ggplot(mapDIS3)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS2,
aes(fill=clust),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_manual(values=c("firebrick","mediumseagreen","lightgoldenrod1")) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "bottom") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Distritos según conglomerado de vulnerabilidad") +
theme(
plot.title = element_text(color="black", size=11, face="bold"))
mapa1
names(mapDIS3)
mapaleyendaL= ggplot(mapDIS3)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS3,
aes(fill=clust),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_manual(values=c("firebrick","mediumseagreen","lightgoldenrod1")) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "bottom") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Distritos según conglomerado de vulnerabilidad") +
theme(
plot.title = element_text(color="black", size=11, face="bold"))
mapa1
mapaleyendaL= ggplot(mapDIS3)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS3,
aes(fill=clust),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_manual(values=c("firebrick","mediumseagreen","lightgoldenrod1")) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "right") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Distritos según conglomerado de vulnerabilidad") +
theme(
plot.title = element_text(color="black", size=11, face="bold"))
mapa1
mapaleyendaL= ggplot(mapDIS3)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS3,
aes(fill=clust),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_manual(values=c("firebrick","mediumseagreen","lightgoldenrod1")) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "right") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Distritos según conglomerado de vulnerabilidad") +
theme(
plot.title = element_text(color="black", size=11, face="bold"))
mapa1
mapaleyendaL= ggplot(mapDIS3)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS3,
aes(fill=clust),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_manual(values=c("orange","mediumseagreen","lightgoldenrod1")) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "right") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Distritos según conglomerado de vulnerabilidad") +
theme(
plot.title = element_text(color="black", size=11, face="bold"))
mapa1
mapaleyendaL= ggplot(mapDIS3)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS3,
aes(fill=clust),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_manual(values=c("orange","skyblue1","lightgoldenrod1")) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "right") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Distritos según conglomerado de vulnerabilidad") +
theme(
plot.title = element_text(color="black", size=11, face="bold"))
mapa1
mapaleyendaL= ggplot(mapDIS3)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS3,
aes(fill=clust),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_manual(values=c("orange","turquoise","lightgoldenrod1")) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "right") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Distritos según conglomerado de vulnerabilidad") +
theme(
plot.title = element_text(color="black", size=11, face="bold"))
mapa1
mapaleyendaL= ggplot(mapDIS3)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS3,
aes(fill=clust),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_manual(values=c("tomato","turquoise","lightgoldenrod1")) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "right") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Distritos según conglomerado de vulnerabilidad") +
theme(
plot.title = element_text(color="black", size=11, face="bold"))
mapa1
names(data)
colnames(data)[15] = "AP"
modelo = lm(AP ~ IDH_2019 + tDISC + tMAS80 + IVA + POBREZA_2019, data = data)
equatiomatic::extract_eq(modelo, use_coefs = TRUE)
model=list('AP'=data)
modelsummary(modelo, title = "OLS",
stars = TRUE,
output = "kableExtra")
summary(modelo)
summ_clust%>%
kbl() %>%
kable_minimal()
knitr::include_graphics("logoPUCP.png")
#Librerías del ejercicio:
# include = FALSE para que no salga en el html.
library(rio)
library(dplyr)
library(ggplot2)
library(cowplot)
library(kableExtra)
library(reshape)
library(DT)
library(equatiomatic)
library(modelsummary)
library(factoextra)
library(cluster)
data = import("finalData.csv")
mapDIS=sf::read_sf("shapes/Lima.shp") #shapefile
#Juntamos información con el shape:
mapDIS2=merge(mapDIS,data,by.x='IDDIST',by.y='UBIGEO', all.x = T) #siempre primero el shape
ausen = data[,c(1,13)]
colnames(ausen)[2] = "AUSENTISMO"
datatable(ausen, filter = "top")
ggplot(data, aes(x=IDH_2019, y=AUSEN)) +
geom_point(size=1.5, shape=23, color="blue") +
geom_text(label=data$DISTRITO, vjust=-0.5, hjust = 1,color="black", size=3) +
labs(title = "Ausentismo e IDH a nivel distrital",
x = "IDH",
y = "Ausentismo") +
geom_smooth(method=lm, se=FALSE, linetype="dashed",
color="darkred") + theme(panel.background = element_blank())
### Mapa de AP
mapaleyendaL= ggplot(mapDIS2)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS2,
aes(fill=`ACCION POPULAR`),color = "gray")
mapa= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "firebrick", breaks=seq(from=0, to=100, by=20)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "bottom") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "% de votos válidos por Acción Popular") +
theme(
plot.title = element_text(color="black", size=10, face="bold"))
### Mapa de Podemos
mapaleyendaL= ggplot(mapDIS2)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS2,
aes(fill=`PODEMOS POR EL PROGRESO DEL PERU`),color = "gray")
mapa2= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "dodgerblue2", breaks=seq(from=0, to=100, by=20)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "bottom") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "% de votos válidos por Podemos") +
theme(
plot.title = element_text(color="black", size=10, face="bold"))
### Mapa del ganador
mapaleyendaL= ggplot(mapDIS2)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS2,
aes(fill=GANADOR),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_manual(values=c("firebrick","dodgerblue2")) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "bottom") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Victoria a nivel distrital") +
theme(
plot.title = element_text(color="black", size=11, face="bold"))
plot_grid(mapa,mapa2,mapa1, ncol = 3)
ap = data[,c(1,15,29)]
ap_summary = as.data.frame(apply(ap[-1],2,summary))
ap_summary%>%
kbl() %>%
kable_minimal()
ap_resh = melt(ap, id=c("DISTRITO"))
ggplot(data= ap_resh, aes(x=value, group=variable, fill=variable)) +
geom_density(adjust=1.5, alpha=.4, color = "gray", linetype = "dashed") +
scale_fill_manual(values=c("firebrick","dodgerblue2"), name = "") + theme_void() +
theme(legend.position="bottom")
data$tDISC = data$DISC_2020/data$POB_2020
data$tMAS80 = data$MAS80_2020/data$POB_2020
inputData = data[,c(1,7:10,38,39)]
row.names(inputData) = inputData$DISTRITO
inputData = inputData[,-c(1)]
set.seed(2019)
g.dist = daisy(inputData, metric="gower")
fviz_nbclust(inputData, pam,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F) #Recomendación de num para PAM. Sale 3
fviz_nbclust(inputData, hcut,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F) #Sale 2 para jerarquico. Nos vamos a quedar con 3
#Hacemos los clusters:
res.pam = pam(g.dist,3,cluster.only = F)
res.agnes = hcut(g.dist, k = 3,hc_func='agnes',hc_method = "ward.D")
res.diana = hcut(g.dist, k = 3,hc_func='diana')
#Evaluación gráfica
fviz_silhouette(res.pam) #PAM
fviz_silhouette(res.agnes) #AGNES
fviz_silhouette(res.diana) #Diana
#Agregamos conglomerados:
inputData$clust = factor(res.agnes$cluster)
#Lo pasamos a la data original:
inputData$DISTRITO = row.names(inputData)
row.names(inputData) = NULL
inputData = inputData[,c(7,8)]
table(inputData$clust)
table(data$clust)
data = merge(data, inputData, by = "DISTRITO")
table(data$clust)
data$clust = factor(data$clust, levels = c(1:3), labels = c("Vulnerabilidad alta","Vulnerabilidad baja","Vulnerabilidad media"))
bar1 = data %>%
group_by(clust) %<%
summarise(Cluster = n())
library(dplyr)
bar1 = data %>%
group_by(clust) %>%
summarise(Cluster = n())
View(bar1)
ggplot(bar, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster),color="white", size=3)
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster),color="white", size=3)
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster),color="white", size=4)
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster),color="white", size=4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster),color="white", size=4) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster),color="white", size=4, vjust=0.3, hjust = 1.3, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster),color="white", size=4, vjust=0.3, hjust = 1.3, color="black") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=0.3, hjust = 1.3, color="black") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=0.3, hjust = 1.3, color="gray") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=0, hjust = 1.3, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=-1, hjust = 1.3, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=-0.5, hjust = 1.3, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=-0.3, hjust = 1.3, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=-0, hjust = 1.3, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=-1, hjust = 1.3, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=1, hjust = 1.3, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=1, hjust = 1, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=1, hjust = 1.5, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=1, hjust = 0, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=1.5, hjust = 0, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=1.5, hjust = -1, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=1.5, hjust = 1, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=1.5, hjust = 0.5, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(data= ap_resh, aes(x=value, group=variable, fill=variable)) +
geom_density(adjust=1.5, alpha=.4, color = "gray", linetype = "dashed") +
scale_fill_manual(values=c("firebrick","dodgerblue2"), name = "")  +
theme(legend.position="bottom") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
ggplot(data= ap_resh, aes(x=value, group=variable, fill=variable)) +
geom_density(adjust=1.5, alpha=.4, color = "gray", linetype = "dashed") +
scale_fill_manual(values=c("firebrick","dodgerblue2"), name = "")  +
theme(legend.position="bottom") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())  +
labs(title = "Concentración de votos por partido",
x = " ",
y = " ")
ggplot(bar1, aes(x=clust, y=Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Número de distritos por cada conglomerado",
x = " ",
y = " ") +
geom_text(aes(label=Cluster), size=4, vjust=1.5, hjust = 0.5, color="white") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())
